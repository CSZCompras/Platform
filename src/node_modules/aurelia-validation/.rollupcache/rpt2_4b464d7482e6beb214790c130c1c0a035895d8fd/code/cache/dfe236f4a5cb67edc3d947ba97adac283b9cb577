{"code":"// Exports\r\nexport * from './get-target-dom-element';\r\nexport * from './property-info';\r\nexport * from './property-accessor-parser';\r\nexport * from './validate-binding-behavior';\r\nexport * from './validate-event';\r\nexport * from './validate-result';\r\nexport * from './validate-trigger';\r\nexport * from './validation-controller';\r\nexport * from './validation-controller-factory';\r\nexport * from './validation-errors-custom-attribute';\r\nexport * from './validation-renderer-custom-attribute';\r\nexport * from './validator';\r\nexport * from './implementation/rules';\r\nexport * from './implementation/standard-validator';\r\nexport * from './implementation/validation-messages';\r\nexport * from './implementation/validation-message-parser';\r\nexport * from './implementation/validation-rules';\r\nimport { Validator } from './validator';\r\nimport { StandardValidator } from './implementation/standard-validator';\r\nimport { ValidationMessageParser } from './implementation/validation-message-parser';\r\nimport { PropertyAccessorParser } from './property-accessor-parser';\r\nimport { ValidationRules } from './implementation/validation-rules';\r\nimport { ValidateBindingBehavior, ValidateManuallyBindingBehavior, ValidateOnBlurBindingBehavior, ValidateOnChangeBindingBehavior, ValidateOnChangeOrBlurBindingBehavior } from './validate-binding-behavior';\r\nimport { ValidationErrorsCustomAttribute } from './validation-errors-custom-attribute';\r\nimport { ValidationRendererCustomAttribute } from './validation-renderer-custom-attribute';\r\n/**\r\n * Aurelia Validation Configuration API\r\n */\r\nvar AureliaValidationConfiguration = /** @class */ (function () {\r\n    function AureliaValidationConfiguration() {\r\n        this.validatorType = StandardValidator;\r\n    }\r\n    /**\r\n     * Use a custom Validator implementation.\r\n     */\r\n    AureliaValidationConfiguration.prototype.customValidator = function (type) {\r\n        this.validatorType = type;\r\n    };\r\n    /**\r\n     * Applies the configuration.\r\n     */\r\n    AureliaValidationConfiguration.prototype.apply = function (container) {\r\n        var validator = container.get(this.validatorType);\r\n        container.registerInstance(Validator, validator);\r\n    };\r\n    return AureliaValidationConfiguration;\r\n}());\r\nexport { AureliaValidationConfiguration };\r\n/**\r\n * Configures the plugin.\r\n */\r\nexport function configure(\r\n// tslint:disable-next-line:ban-types\r\nframeworkConfig, callback) {\r\n    // the fluent rule definition API needs the parser to translate messages\r\n    // to interpolation expressions.\r\n    var messageParser = frameworkConfig.container.get(ValidationMessageParser);\r\n    var propertyParser = frameworkConfig.container.get(PropertyAccessorParser);\r\n    ValidationRules.initialize(messageParser, propertyParser);\r\n    // configure...\r\n    var config = new AureliaValidationConfiguration();\r\n    if (callback instanceof Function) {\r\n        callback(config);\r\n    }\r\n    config.apply(frameworkConfig.container);\r\n    // globalize the behaviors.\r\n    if (frameworkConfig.globalResources) {\r\n        frameworkConfig.globalResources(ValidateBindingBehavior, ValidateManuallyBindingBehavior, ValidateOnBlurBindingBehavior, ValidateOnChangeBindingBehavior, ValidateOnChangeOrBlurBindingBehavior, ValidationErrorsCustomAttribute, ValidationRendererCustomAttribute);\r\n    }\r\n}\r\n"}
